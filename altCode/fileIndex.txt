Note: buyer is called regulator throughout most of the code. Code also includes references to a public development value based on an earlier specification of the model. Setting the public value to anything but 0 will break the code.

Core simulation files:
#################################
condMeanEnv
condPriv
condSignal
integralCaseVal2: called by signalIntegrand to 
optOfferSimple: solves the inner optimization problem for many cases simultaneously
p2Out: calculates expected values for period 2 outcomes
privDist: used to set parameter values in some unused comparative statics examples
regPay2: used to compute buyer payoff in period 2
regPay2FOC: organizes the output of regPay2 for solving first order conditions when using ncpsolve
regPay2Objective: organizes the output of regPay2 for solving individual problems directly when using fmincon
regPayFullReal: computes the buyer payoff across both periods by integrating across possible period 2 information sets
regPayNoInfo: computes the buyer payoff across both periods if no better info arrives in period2
signalImpact: core simulation control file; assess the impact of improving the signal for a single parameter case
####################################

Files to facilitate running multiple parameter cases:
###################################
setUpExperiment: called by signalImpactProblem to set up the basic structure of a run
signalImpactProblem: describes the experiments we want to run and generates results
###################################

Analysis/graph files:
########################################
categoryExpVal: assess the contributions of different parcels to total benefits (generates Figs. 5,7, and 10)
compareMultipleSolns: used to test when multiple solutions to B(p)=0 occur
compareOut: used to extract results and facilitate comparisons across parameter cases
compareOutMats: called by compareOut in faciliating comparisons across parameter cases
comparePlotMeanByVarCorr: plots a single output variable across three dimensions. Can plot either delta to due info or straight value. Used to generate deltaComp and valueComp graphs. (e.g. Figs 11-13)
computeCustomizeVal: calculates the change in payoff from customizing offers to the possibility of improved information
finalCategoriesSingleCase: used to generate Fig. 3
findMultipleSolns: used by compareMultipleSolns in investingatin when B(p)=0 has multiple solutions
meanVarCompPlot: generates Figure 8
signalIntegrand: used by categoryExpVal to integrate across possible signals
upperBoundImpactPlots: generates Fig 4
legendTitle: utility for adding legend titles
sizedFigure: utility for creating a figure of a specific size

####################
#Required utilities#
####################
Available from MathWorks File Exchange:
quadvqk
subtightplot
brewermap

Available from Mario Miranda:
CompEcon toolbox 2016
*modified version of ncpsolve included in this archive must be added to the CEtools directory to replace the default version. Code will not operate correctly if it remains in the running directory
